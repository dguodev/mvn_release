name: Release
on:
  workflow_dispatch:
    inputs:
      module:
        type: choice
        description: chose module to release
        options:
          - module1
          - module2
        required: true
      releaseVersion:
        description: Release version
        required: true
      developmentVersion:
        description: Post release development version
        required: true
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Show environment v1
        run: env
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: ${{github.ref.name}}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Release
        run: mvn release:prepare -Dresume=false -B -s .maven_settings.xml -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push to ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t public.ecr.aws/w4s5i2w7/akamark:${{ github.event.inputs.module }}_${{ github.event.inputs.releaseVersion }} .          
          docker push --all-tags public.ecr.aws/w4s5i2w7/akamark
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mvn_release-${{ github.event.inputs.releaseVersion }}
          body: this is body